{"version":3,"sources":["Components/Header.js","Components/Statedata.js","Components/India.js","Components/World.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","responsive","bg","variant","fixed","Brand","href","Nav","className","to","Component","Statedata","state","stateData","Axios","get","then","response","x","data","setState","keys","Object","this","style","padding","Accordion","map","itm","ky","districts","districtData","total_confirmed","total_active","total_recovered","total_deaths","district_list","active","confirmed","deceased","recovered","ob","push","Card","Toggle","as","Button","eventKey","Collapse","Body","Table","district_name","India","src","alt","marginTop","width","Title","cases","Text","todayCases","todayRecovered","deaths","todayDeaths","World","country","marginLeft","countryInfo","flag","Footer","textDecoration","color","target","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"iUAkBeA,E,uKAZP,OACI,kBAACC,EAAA,EAAD,CAAQC,WAAW,OAAOC,GAAG,OAAOC,QAAQ,OAAOC,MAAM,OACzD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,UAAnB,sBACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,UAA9B,SACA,kBAAC,IAAD,CAAMD,UAAU,WAAWC,GAAG,UAA9B,e,GAPOC,a,iDC4FNC,E,kDA3FX,aAAc,IAAD,8BACT,gBACKC,MAAM,CACPC,UAAW,IAHN,E,gEAOK,IAAD,OACfC,IAAMC,IAAI,yDACTC,MAAK,SAAAC,GACF,IAAIC,EAAED,EAASE,KACf,EAAKC,SAAS,CAACP,UAAUK,S,+BAItB,IAAD,OACAG,EAAKC,OAAOD,KAAKE,KAAKX,MAAMC,WAChC,OACI,yBAAKL,UAAU,OACX,yBAAKA,UAAU,YAAYgB,MAAO,CAACC,QAAQ,QACvC,kBAACC,EAAA,EAAD,KAEQL,EAAKM,KAAI,SAACC,EAAIC,GACV,IAAIC,EAAU,EAAKlB,MAAMC,UAAUe,GAAKG,aAGpCC,EAAgB,EAChBC,EAAa,EACbC,EAAgB,EAChBC,EAAa,EAEbC,EAAc,GAElB,IAAI,IAAIlB,KAAKY,EAAU,CACnBG,GAAcH,EAAUZ,GAAGmB,OAC3BL,GAAiBF,EAAUZ,GAAGoB,UAC9BH,GAAcL,EAAUZ,GAAGqB,SAC3BL,GAAiBJ,EAAUZ,GAAGsB,UAC9B,IAAIC,EAAGX,EAAUZ,GACjBuB,EAAE,cAAkBvB,EACpBkB,EAAcM,KAAKD,GAGvB,OACI,kBAACE,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK5C,OAAN,KACI,kBAAC2B,EAAA,EAAUkB,OAAX,CAAkBC,GAAIC,IAAQ3C,QAAQ,OAAO4C,SAAUlB,GAClDD,EADL,IACU,0BAAMpB,UAAU,eAAhB,gBAA4CwB,GADtD,IAC8E,0BAAMxB,UAAU,eAAhB,WAAuCyB,GADrH,IAC0I,0BAAMzB,UAAU,eAAhB,cAA0C0B,GADpL,IAC4M,0BAAM1B,UAAU,cAAhB,UAAqC2B,KAGrP,kBAACT,EAAA,EAAUsB,SAAX,CAAoBD,SAAUlB,GAC1B,kBAACc,EAAA,EAAKM,KAAN,KACI,kBAACC,EAAA,EAAD,CAAOjD,YAAU,EAACO,UAAU,sCACxB,+BACI,4BACI,wCACA,yCACA,sCACA,yCACA,wCAGR,+BAEO4B,EAAcT,KAAI,SAACC,EAAIC,GACnB,OACI,4BACI,4BAAKD,EAAIuB,eACT,4BAAKvB,EAAIU,WACT,4BAAKV,EAAIS,QACT,4BAAKT,EAAIY,WACT,4BAAKZ,EAAIW,6B,GAxExD7B,aC8ET0C,E,kDA5EX,aAAc,IAAD,8BACT,gBACKxC,MAAM,CACPO,KAAK,IAHA,E,gEAOO,IAAD,OACfL,IAAMC,IAAI,gDAAgDC,MAAK,SAAAC,GAC3D,EAAKG,SAAS,CAACD,KAAKF,EAASE,Y,+BAKjC,OACI,yBAAKX,UAAU,OACX,yBAAKA,UAAU,aACX,0CACA,yBAAK6C,IAAI,8CAA8CC,IAAI,WAE/D,yBAAK9C,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,WAAYgB,MAAQ,CAAC+B,UAAW,WAC3C,kBAACZ,EAAA,EAAD,CAAMnC,UAAU,sBAAsBgB,MAAO,CAACgC,MAAM,UAChD,kBAACb,EAAA,EAAKM,KAAN,CAAWzC,UAAU,eACjB,kBAACmC,EAAA,EAAKc,MAAN,oBACA,4BAAKlC,KAAKX,MAAMO,KAAKuC,OACrB,kBAACf,EAAA,EAAKgB,KAAN,iBACapC,KAAKX,MAAMO,KAAKyC,WAD7B,QAMZ,yBAAKpD,UAAU,WAAYgB,MAAQ,CAAC+B,UAAW,WAC3C,kBAACZ,EAAA,EAAD,CAAMnC,UAAU,sBAAsBgB,MAAO,CAACgC,MAAM,UAChD,kBAACb,EAAA,EAAKM,KAAN,CAAWzC,UAAU,eACjB,kBAACmC,EAAA,EAAKc,MAAN,qBACA,4BAAKlC,KAAKX,MAAMO,KAAKkB,SAEzB,kBAACM,EAAA,EAAKgB,KAAN,eAKR,yBAAKnD,UAAU,WAAYgB,MAAQ,CAAC+B,UAAW,WAC3C,kBAACZ,EAAA,EAAD,CAAMnC,UAAU,sBAAsBgB,MAAO,CAACgC,MAAM,UAChD,kBAACb,EAAA,EAAKM,KAAN,CAAWzC,UAAU,eACjB,kBAACmC,EAAA,EAAKc,MAAN,kBACA,4BAAKlC,KAAKX,MAAMO,KAAKqB,WACrB,kBAACG,EAAA,EAAKgB,KAAN,iBACapC,KAAKX,MAAMO,KAAK0C,eAD7B,QAMZ,yBAAKrD,UAAU,WAAYgB,MAAQ,CAAC+B,UAAW,WAC3C,kBAACZ,EAAA,EAAD,CAAMnC,UAAU,qBAAqBgB,MAAO,CAACgC,MAAM,UAC/C,kBAACb,EAAA,EAAKM,KAAN,CAAWzC,UAAU,eACjB,kBAACmC,EAAA,EAAKc,MAAN,eACA,4BAAKlC,KAAKX,MAAMO,KAAK2C,QACrB,kBAACnB,EAAA,EAAKgB,KAAN,iBACapC,KAAKX,MAAMO,KAAK4C,YAD7B,UAQpB,yBAAKvD,UAAU,aACX,kBAAC,EAAD,Y,GAtEAE,aCoDLsD,E,kDApDX,aAAc,IAAD,8BACT,gBACKpD,MAAM,CACPO,KAAK,IAHA,E,gEAOO,IAAD,OACfL,IAAMC,IAAI,0CAA0CC,MAAK,SAAAC,GACrD,IAAIC,EAAED,EAASE,KACf,EAAKC,SAAS,CAACD,KAAKD,S,+BAKxB,OACI,yBAAKV,UAAU,OACX,yBAAKA,UAAU,aACX,0CACA,kBAAC0C,EAAA,EAAD,CAAOjD,YAAU,EAACO,UAAU,iDACxB,+BACI,4BACI,uCACA,yCACA,sCACA,yCACA,wCAGR,+BAEQe,KAAKX,MAAMO,KAAKQ,KAAI,SAACC,EAAIC,GACrB,OACI,4BACI,4BAAKD,EAAIqC,QAAT,IAAkB,yBAAKzC,MAAO,CAACgC,MAAO,MAAOU,WAAW,SAAUb,IAAKzB,EAAIuC,YAAYC,QACvF,4BAAKxC,EAAI8B,OACT,4BAAK9B,EAAIS,QACT,4BAAKT,EAAIY,WACT,4BAAKZ,EAAIkC,oB,GAvCjCpD,aCgBL2D,E,uKAfP,OACI,yBAAK7D,UAAU,gCACX,yBAAKA,UAAU,eACX,2BACI,2CADJ,KACyB,uBAAGF,KAAK,gCAAgCkB,MAAO,CAAE8C,eAAgB,OAAQC,MAAM,SAAUC,OAAO,UAAhG,4CAAqJ,6BAC1K,uBAAGlE,KAAK,6BAA6BkB,MAAO,CAAE8C,eAAgB,OAAQC,MAAM,SAAWC,OAAO,UAA9F,mCAHR,0BAM2B,uBAAGlE,KAAK,4BAA4BkB,MAAO,CAAE8C,eAAgB,SAA7D,yB,GAVtB5D,a,OCkCN+D,MAtBf,WACE,OACI,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKjE,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAChB,kBAAC,EAAD,SAIN,kBAAC,EAAD,QCpBYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvE,MAAK,SAAAwE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.405c4ac2.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Navbar,Nav} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return(\r\n            <Navbar responsive=\"true\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n            <Navbar.Brand href=\"/india\">COVID - 19 Tracker</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n              <Link className=\"nav-link\" to=\"/india\">India</Link>\r\n              <Link className=\"nav-link\" to=\"/world\">World</Link>\r\n            </Nav>\r\n          </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React,{Component} from 'react';\r\nimport Axios from 'axios';\r\nimport {Accordion,Card,Button,Table} from 'react-bootstrap';\r\n\r\nclass Statedata extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            stateData: {}\r\n        };\r\n    }\r\n\r\n  componentDidMount(){\r\n      Axios.get(\"https://api.covid19india.org/state_district_wise.json\")\r\n      .then(response => {\r\n          var x=response.data\r\n          this.setState({stateData:x});\r\n      });\r\n  }\r\n\r\n    render(){\r\n        let keys=Object.keys(this.state.stateData);\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\" style={{padding:'1em'}}>\r\n                    <Accordion>\r\n                        {\r\n                            keys.map((itm,ky)=>{\r\n                                let districts=this.state.stateData[itm].districtData;\r\n                                // let districtkeys=Object.keys(districts);\r\n\r\n                                let total_confirmed=0;\r\n                                let total_active=0;\r\n                                let total_recovered=0;\r\n                                let total_deaths=0;\r\n\r\n                                let district_list=[];\r\n\r\n                                for(let x in districts){\r\n                                    total_active+=districts[x].active;\r\n                                    total_confirmed+=districts[x].confirmed;\r\n                                    total_deaths+=districts[x].deceased;\r\n                                    total_recovered+=districts[x].recovered;\r\n                                    let ob=districts[x];\r\n                                    ob[\"district_name\"]=x;\r\n                                    district_list.push(ob);\r\n                                }\r\n\r\n                                return(\r\n                                    <Card>\r\n                                        <Card.Header>\r\n                                            <Accordion.Toggle as={Button} variant=\"dark\" eventKey={ky}>\r\n                                                {itm} <span className=\"btn-primary\">Total Cases: {total_confirmed}</span> <span className=\"btn-warning\">Active: {total_active}</span> <span className=\"btn-success\">Recovered: {total_recovered}</span> <span className=\"btn-danger\">Death: {total_deaths}</span>\r\n                                            </Accordion.Toggle>\r\n                                        </Card.Header>\r\n                                        <Accordion.Collapse eventKey={ky}>\r\n                                            <Card.Body>\r\n                                                <Table responsive className=\"table table-bordered table-striped\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <td>District</td>\r\n                                                            <td>Confirmed</td>\r\n                                                            <td>Active</td>\r\n                                                            <td>Recovered</td>\r\n                                                            <td>Deaths</td>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                       {\r\n                                                           district_list.map((itm,ky)=>{\r\n                                                               return(\r\n                                                                   <tr>\r\n                                                                       <td>{itm.district_name}</td>\r\n                                                                       <td>{itm.confirmed}</td>\r\n                                                                       <td>{itm.active}</td>\r\n                                                                       <td>{itm.recovered}</td>\r\n                                                                       <td>{itm.deceased}</td>\r\n                                                                   </tr>\r\n                                                               )\r\n                                                           })\r\n                                                       }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                            </Card.Body>\r\n                                        </Accordion.Collapse>\r\n                                    </Card>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Statedata;","import React,{Component} from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Statedata from './Statedata';\r\nimport Axios from 'axios';\r\n\r\nclass India extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            data:{}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get(\"https://corona.lmao.ninja/v2/countries/india\").then(response =>{\r\n            this.setState({data:response.data})\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <h2>India Data</h2>\r\n                    <img src=\"https://www.countryflags.io/IN/shiny/64.png\" alt=\"India\"/>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\"  style={ {marginTop: '0.8rem' }}>\r\n                            <Card className=\"badge badge-primary\" style={{width:'20rem'}}>\r\n                                <Card.Body className=\"text-center\">\r\n                                    <Card.Title>TOTAL CASES</Card.Title>\r\n                                    <h3>{this.state.data.cases}</h3>\r\n                                    <Card.Text>\r\n                                       [Today : {this.state.data.todayCases}]\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"col-md-3\"  style={ {marginTop: '0.8rem' }}>\r\n                            <Card className=\"badge badge-warning\" style={{width:'20rem'}}>\r\n                                <Card.Body className=\"text-center\">\r\n                                    <Card.Title>ACTIVE CASES</Card.Title>\r\n                                    <h3>{this.state.data.active}</h3>\r\n                                </Card.Body>\r\n                                <Card.Text>\r\n                                    &nbsp;\r\n                                </Card.Text>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"col-md-3\"  style={ {marginTop: '0.8rem' }}>\r\n                            <Card className=\"badge badge-success\" style={{width:'20rem'}}>\r\n                                <Card.Body className=\"text-center\">\r\n                                    <Card.Title>RECOVERED</Card.Title>\r\n                                    <h3>{this.state.data.recovered}</h3>\r\n                                    <Card.Text>\r\n                                       [Today : {this.state.data.todayRecovered}]\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"col-md-3\"  style={ {marginTop: '0.8rem' }}>\r\n                            <Card className=\"badge badge-danger\" style={{width:'20rem'}}>\r\n                                <Card.Body className=\"text-center\">\r\n                                    <Card.Title>DEATHS</Card.Title>\r\n                                    <h3>{this.state.data.deaths}</h3>\r\n                                    <Card.Text>\r\n                                       [Today : {this.state.data.todayDeaths}]\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <Statedata/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default India;","import React,{Component} from 'react';\r\nimport Axios from 'axios';\r\nimport {Table} from 'react-bootstrap';\r\n\r\nclass World extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            data:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get(\"https://corona.lmao.ninja/v2/countries\").then(response=>{\r\n            let x=response.data;\r\n            this.setState({data:x});\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <h2>World Data</h2> \r\n                    <Table responsive className=\"table table-info table-bordered table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td>Country</td>\r\n                                <td>Confirmed</td>\r\n                                <td>Active</td>\r\n                                <td>Recovered</td>\r\n                                <td>Deaths</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.data.map((itm,ky)=>{\r\n                                    return(\r\n                                        <tr>\r\n                                            <td>{itm.country} <img style={{width: '3em', marginLeft:'10 px'}} src={itm.countryInfo.flag}/></td>\r\n                                            <td>{itm.cases}</td>\r\n                                            <td>{itm.active}</td>\r\n                                            <td>{itm.recovered}</td>\r\n                                            <td>{itm.deaths}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nexport default World;","import React,{Component} from 'react';\r\n\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"col-md-12 bg-dark text-white\">\r\n                <div className=\"text-center\">\r\n                    <p>\r\n                        <b>Data Sources</b>: <a href=\"https://api.covid19india.org/\" style={{ textDecoration: 'none', color:'white'}} target=\"_blank\">COVID-19 India Org Data Operations Group</a><br/>\r\n                        <a href=\"https://corona.lmao.ninja/\" style={{ textDecoration: 'none', color:'white' }} target=\"_blank\">disease.sh - Open Disease Data</a>\r\n                    </p>\r\n            \r\n                    Created using React by <a href=\"https://althafmuhammad.me\" style={{ textDecoration: 'none' }}>Althaf Muhammad</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from './Components/Header';\r\nimport India from './Components/India';\r\nimport World from './Components/World';\r\nimport Footer from './Components/Footer';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n        <Header/>\r\n        <div className=\"container-fluid\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <India/>\r\n            </Route>\r\n            <Route exact path=\"/india\">\r\n              <India/>\r\n            </Route>\r\n            <Route exact path=\"/world\">\r\n              <World/>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n        <Footer/>\r\n      </Router>     \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}